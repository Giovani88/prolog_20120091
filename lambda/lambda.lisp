;(load "lambda.lisp")
(defvar *area_rectangulo* (lambda (a b) (* a b)))
(defvar *area_triangulo* (lambda (altura base) (/ (* altura base) 2)))
(defvar *area_circulo* (lambda (radio) (* radio radio 3.1416)))
(defvar *area_rombo* (lambda (d1 d2) (/ (* d1 d2) 2)))
(defvar *area_cuadrado* (lambda (lado)(* lado lado)))
(defvar *area_trapecio* (lambda (b1 b2 altura) (/ (* (+ b1 b2) altura) 2)))
(defvar *area_cometa* (lambda (d1 d2) (* (/ d1 2) d2)))
(defvar *area_poligono_regular* (lambda (numero_lados lado) 
        (setq angulo (/ 360 (* 2 numero_lados)))
        (setq apotema (/ lado (* 2 (tan (/ (* angulo 3.1416) 180)))))
        (/ (* apotema numero_lados lado) 2)
    )
)
(defvar *area_corona_circular* (lambda (r r2) (* 3.1416 (- (* r r) (* r2 r2)))))
(defvar *area_sector_circular* (lambda (angulo radio) (/ (* 3.1416 radio radio angulo) 360)))
;volumenes
(defvar *volumen_cubo* (lambda (lado)(format t "El volumen del cubo es: ~d unidades cubicas" (* lado lado lado))))
(defvar *volumen_ortoedro* (lambda (a b h)(format t "El volumen del ortoedro es: ~d unidades cubicas" (* a b h))))
(defvar *volumen_cilindro* (lambda (radio altura)(format t "El volumen del cilindro es: ~d unidades cubicas" (* 3.1416 radio radio altura))))
(defvar *volumen_cono* (lambda (altura radio)
        (setq volumen (/ (* 3.1416 radio radio altura) 3))
        (format t "El volumen del cono es: ~d unidades cubicas" volumen)
    )    
)
(defvar *volumen_esfera* (lambda (radio)(format t "El volumen de la esfera es: ~d unidades cubicas" (/ (* 4 3.1416 (expt radio 3)) 3))))
(defvar *volumen_tetraedro* (lambda (arista)(format t "El volumen del tetraedro es: ~d unidades cubicas" (* (/ (sqrt 2) 12) (expt arista 3)))))
(defvar *volumen_piramide_triangular* (lambda (base altura_base altura_piramide)
    (setq area (/ (* base altura_base) 2))
    (format t "El volumen de la piramide triangular es: ~d unidades cubicas." (/ (* area altura_piramide) 3))
))
(defvar *volumen_piramide_cuadrangular* (lambda (base altura)(format t "El volumen de la piramide cuadrangular es: ~d unidades cubicas" (/ (* (expt base 2) altura) 3))))
(defvar *volumen_prisma_triangular* (lambda (base altura_base altura_prisma)(format t "El volumen del prisma triangular es: ~d unidades cubicas" (* (/ (* base altura_base) 2) altura_prisma))))
(defvar *volumen_prisma_cuadrangular* (lambda (base altura)(format t "El volumen del prisma cuadrangular es: ~d unidades cubicas" (* (expt base 2) altura))))